/*----------------------------------------------------------------------------*/
/* Copyright (c) 2020 FRC Team 2077. All Rights Reserved.                     */
/* Open Source Software - may be modified and shared by FRC teams.            */
/*----------------------------------------------------------------------------*/

package org.usfirst.frc.team2077.subsystems;

import edu.wpi.first.networktables.NetworkTableEntry;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import static org.usfirst.frc.team2077.Robot.*;

public class Crosshairs extends SubsystemBase {

    private int width_;
    private int height_;
    private double[] crosshairs_ = new double[] {0, 0};
    private double focalLength_ = 620;
 
    NetworkTableEntry networkTableEntry_ = robot_.networkTableInstance_.getEntry("Crosshairs");

    //width and height are width and height constraints of the image
    public Crosshairs(int width, int height) {
        width_ = width;
        height_ = height;
        //this.width = width_;
    }

    public void set(double x, double y) {
        boolean heightLim = Math.abs(y) >= height_ / 2; 
        boolean widthLim = Math.abs(x) >= width_ / 2;
        crosshairs_[0] = x;
        crosshairs_[1] = y;
        if (heightLim) {
            crosshairs_[1] = Math.copySign(height_ / 2, y);
        }
        if (widthLim) {
            crosshairs_[0] = Math.copySign(width_ / 2, x);
        }

        networkTableEntry_.setDoubleArray(crosshairs_);
        
    }

    public double[] get() {
        return new double[] {crosshairs_[0], crosshairs_[1]};
    }

    public double getAzimuth() {
        //crosshairs_[0] holds x value of crosshair
        //average calculated focal length of camera is 620, max far side length from center is 320
        double azimuth = Math.toDegrees(Math.atan(this.crosshairs_[0]/focalLength_)); //Max angle is 27.29957
        //System.out.println(azimuth);
        return azimuth;
    }

    public double getElevation() {
        //average calculated focal length of camera is 620, max far side from centerlength is 180
        double elevation = Math.toDegrees(Math.atan(this.crosshairs_[1]/focalLength_));
        return elevation;
   }

    @Override
    public String toString() {
        return "(" + Math.round(crosshairs_[0]) + "," + Math.round(crosshairs_[1]) + "}";
    }
}
